INFO  21-08-30 00:02:15[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1672 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 00:02:15[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 00:02:15[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 00:02:18[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 00:02:19[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 00:02:20[main] [MainApplication:61] - Started MainApplication in 6.084 seconds (JVM running for 6.559)
DEBUG 21-08-30 00:02:24[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"20", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:02:24[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw
TRACE 21-08-30 00:02:24[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:02:24[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:02:24[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:02:24[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:02:24[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:02:24[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:02:24[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:02:25[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
ERROR 21-08-30 00:02:25[reactor-http-nio-2] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: not-null property references a null or transient value : project.challengers.entity.Point.member; nested exception is org.hibernate.PropertyValueException: not-null property references a null or transient value : project.challengers.entity.Point.member
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:294)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:294)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy137.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:63)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$f2119251.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.hibernate.PropertyValueException: not-null property references a null or transient value : project.challengers.entity.Point.member
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:111)
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:55)
	at org.hibernate.action.internal.AbstractEntityInsertAction.nullifyTransientReferencesIfNotAlready(AbstractEntityInsertAction.java:116)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:72)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy137.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:63)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$f2119251.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
INFO  21-08-30 00:04:16[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1707 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 00:04:16[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 00:04:16[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 00:04:18[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 00:04:20[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 00:04:21[main] [MainApplication:61] - Started MainApplication in 6.27 seconds (JVM running for 6.83)
DEBUG 21-08-30 00:04:26[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"20", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:04:26[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:04:26[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [INTEGER] - [10000]
ERROR 21-08-30 00:04:26[reactor-http-nio-2] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]; nested exception is javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy138.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$77de4de0.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:750)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:712)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:427)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:264)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy138.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$77de4de0.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
INFO  21-08-30 00:18:08[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1799 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 00:18:09[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 00:18:09[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 00:18:11[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 00:18:12[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 00:18:14[main] [MainApplication:61] - Started MainApplication in 6.449 seconds (JVM running for 7.013)
DEBUG 21-08-30 00:18:29[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"20", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:18:29[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:18:29[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [INTEGER] - [10000]
ERROR 21-08-30 00:18:29[reactor-http-nio-2] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]; nested exception is javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy138.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$e3adca6b.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:750)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:712)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:427)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:264)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy138.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$e3adca6b.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
INFO  21-08-30 00:22:19[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1836 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 00:22:19[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 00:22:19[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 00:22:22[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 00:22:23[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 00:22:25[main] [MainApplication:61] - Started MainApplication in 6.686 seconds (JVM running for 7.215)
DEBUG 21-08-30 00:22:31[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"20", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:22:31[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:22:31[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [INTEGER] - [10000]
ERROR 21-08-30 00:22:31[reactor-http-nio-2] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]; nested exception is javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy138.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$f280a420.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:750)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:712)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:427)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:264)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy138.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$f280a420.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
INFO  21-08-30 00:36:40[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1938 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 00:36:40[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 00:36:40[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 00:36:43[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 00:36:44[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 00:36:46[main] [MainApplication:61] - Started MainApplication in 6.046 seconds (JVM running for 6.59)
DEBUG 21-08-30 00:36:51[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"20", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:36:51[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1MjMwNCwiaWF0IjoxNjMwMjQ4NzA0fQ.-xIG5nZvaGmdMU50umz4c1v3_CKkaV6xjWdMTfpidK-z1BiwUAalLoGL4DlLe0nUbgqb7S8bnFjtTZA2xpZPnw
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:36:51[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
ERROR 21-08-30 00:36:51[reactor-http-nio-2] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]; nested exception is javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy137.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:63)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$eb30fdfc.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:750)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:712)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:427)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:264)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy137.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:63)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$eb30fdfc.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
INFO  21-08-30 00:39:42[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1975 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 00:39:42[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 00:39:42[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 00:39:45[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 00:39:46[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 00:39:48[main] [MainApplication:61] - Started MainApplication in 6.76 seconds (JVM running for 7.363)
DEBUG 21-08-30 00:39:52[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-standalone-preset.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:52[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/springfox.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:52[reactor-http-nio-3] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/springfox.css?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"style", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7", If-Modified-Since:"Thu, 08 Jul 2021 12:51:31 GMT"]
DEBUG 21-08-30 00:39:52[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui.css?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"style", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:52[reactor-http-nio-4] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-bundle.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:52[reactor-http-nio-4] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:52[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:52[reactor-http-nio-3] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:52[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:52[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:53[reactor-http-nio-4] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui.css?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"text/css,*/*;q=0.1", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"style", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-bundle.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"*/*", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:53[reactor-http-nio-4] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:53[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-standalone-preset.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"*/*", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:53[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:53[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/springfox.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"*/*", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:53[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-resources/configuration/ui
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-resources/configuration/security
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-resources
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/v2/api-docs
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json,*/*", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:53[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 00:39:59[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/member/login
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"35", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:39:59[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
TRACE 21-08-30 00:39:59[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:39:59[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:39:59[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:39:59[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:39:59[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:39:59[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:39:59[reactor-http-nio-5] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
DEBUG 21-08-30 00:40:13[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1NTE5OSwiaWF0IjoxNjMwMjUxNTk5fQ.gNCHcg6popHzIacsleHbHMegeiUz56UQg3jagbizqKYZ-zqhgYF2m-Y7W5ROw41faZIsDjjj1GfGaGPn0klHqg", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 00:40:13[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDI1NTE5OSwiaWF0IjoxNjMwMjUxNTk5fQ.gNCHcg6popHzIacsleHbHMegeiUz56UQg3jagbizqKYZ-zqhgYF2m-Y7W5ROw41faZIsDjjj1GfGaGPn0klHqg
TRACE 21-08-30 00:40:13[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:40:13[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:40:13[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:40:13[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:40:13[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:40:13[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:40:13[reactor-http-nio-5] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 00:40:14[reactor-http-nio-5] [BasicBinder:64] - binding parameter [2] as [INTEGER] - [1000]
ERROR 21-08-30 00:40:14[reactor-http-nio-5] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]; nested exception is javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy138.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$77de4de0.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:750)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:712)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:427)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:264)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy138.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$77de4de0.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
INFO  21-08-30 22:16:24[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1116 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 22:16:24[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 22:16:24[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 22:16:27[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 22:16:29[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 22:16:31[main] [MainApplication:61] - Started MainApplication in 8.639 seconds (JVM running for 9.436)
DEBUG 21-08-30 22:17:15[reactor-http-nio-4] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/springfox.css?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"style", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7", If-Modified-Since:"Thu, 08 Jul 2021 12:51:31 GMT"]
DEBUG 21-08-30 22:17:15[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-standalone-preset.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:15[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/springfox.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:15[reactor-http-nio-3] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-bundle.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:15[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui.css?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"style", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:15[reactor-http-nio-4] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:15[reactor-http-nio-3] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:15[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:15[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:15[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:16[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-standalone-preset.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"*/*", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:16[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/springfox.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"*/*", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:16[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:16[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-bundle.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"*/*", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:16[reactor-http-nio-3] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui.css?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"text/css,*/*;q=0.1", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"style", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:16[reactor-http-nio-3] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-resources/configuration/ui
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-resources/configuration/security
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-resources
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/v2/api-docs
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json,*/*", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:16[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 22:17:23[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/member/login
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"35", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:23[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
TRACE 21-08-30 22:17:23[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 22:17:23[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 22:17:23[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 22:17:23[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 22:17:23[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 22:17:23[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 22:17:23[reactor-http-nio-5] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
DEBUG 21-08-30 22:17:43[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzMzA0MywiaWF0IjoxNjMwMzI5NDQzfQ.6Oa6z98B09ihcLj0wREnnVcASfaK9omLjncW3S43yyDxmUA3Ar10gqDs5tp93AVYgxL0MtWoMmi8ZHYyQDvN3w", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 22:17:43[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzMzA0MywiaWF0IjoxNjMwMzI5NDQzfQ.6Oa6z98B09ihcLj0wREnnVcASfaK9omLjncW3S43yyDxmUA3Ar10gqDs5tp93AVYgxL0MtWoMmi8ZHYyQDvN3w
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 22:17:43[reactor-http-nio-5] [BasicBinder:64] - binding parameter [2] as [INTEGER] - [1000]
ERROR 21-08-30 22:17:43[reactor-http-nio-5] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]; nested exception is javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy138.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$eb30fdfc.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:750)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:712)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:427)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:264)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy138.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$eb30fdfc.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
WARN  21-08-30 23:11:26[HikariPool-1 housekeeper] [HikariPool:787] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m28s688ms).
WARN  21-08-30 23:12:40[HikariPool-1 housekeeper] [HikariPool:787] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m13s356ms).
INFO  21-08-30 23:30:04[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1479 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 23:30:04[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 23:30:04[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 23:30:08[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 23:30:09[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 23:30:10[main] [MainApplication:61] - Started MainApplication in 6.961 seconds (JVM running for 7.529)
DEBUG 21-08-30 23:30:17[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzMzA0MywiaWF0IjoxNjMwMzI5NDQzfQ.6Oa6z98B09ihcLj0wREnnVcASfaK9omLjncW3S43yyDxmUA3Ar10gqDs5tp93AVYgxL0MtWoMmi8ZHYyQDvN3w", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:30:17[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzMzA0MywiaWF0IjoxNjMwMzI5NDQzfQ.6Oa6z98B09ihcLj0wREnnVcASfaK9omLjncW3S43yyDxmUA3Ar10gqDs5tp93AVYgxL0MtWoMmi8ZHYyQDvN3w
WARN  21-08-30 23:30:17[reactor-http-nio-2] [AuthenticationManager:38] - AuthToke Error
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2021-08-30T23:17:23Z. Current time: 2021-08-30T23:30:17Z, a difference of 774053 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at project.challengers.component.JWTTokenComponent.getAllClaimsFromToken(JWTTokenComponent.java:60)
	at project.challengers.component.JWTTokenComponent.getClaimFromToken(JWTTokenComponent.java:41)
	at project.challengers.component.JWTTokenComponent.getMemberIdFromToken(JWTTokenComponent.java:36)
	at project.challengers.config.AuthenticationManager.authenticate(AuthenticationManager.java:36)
	at project.challengers.config.SecurityContextRepository.load(SecurityContextRepository.java:42)
	at org.springframework.security.web.server.context.ReactorContextWebFilter.withSecurityContext(ReactorContextWebFilter.java:53)
	at org.springframework.security.web.server.context.ReactorContextWebFilter.lambda$filter$0(ReactorContextWebFilter.java:48)
	at reactor.core.publisher.MonoContextWrite.subscribeOrReturn(MonoContextWrite.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)
	at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:360)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onSubscribe(MonoCollectList.java:79)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)
	at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:301)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:270)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:228)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4046)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:173)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:860)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:638)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:475)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:525)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:209)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
DEBUG 21-08-30 23:30:20[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/member/login
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"35", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzMzA0MywiaWF0IjoxNjMwMzI5NDQzfQ.6Oa6z98B09ihcLj0wREnnVcASfaK9omLjncW3S43yyDxmUA3Ar10gqDs5tp93AVYgxL0MtWoMmi8ZHYyQDvN3w", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:30:20[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzMzA0MywiaWF0IjoxNjMwMzI5NDQzfQ.6Oa6z98B09ihcLj0wREnnVcASfaK9omLjncW3S43yyDxmUA3Ar10gqDs5tp93AVYgxL0MtWoMmi8ZHYyQDvN3w
WARN  21-08-30 23:30:20[reactor-http-nio-2] [AuthenticationManager:38] - AuthToke Error
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2021-08-30T23:17:23Z. Current time: 2021-08-30T23:30:20Z, a difference of 777472 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at project.challengers.component.JWTTokenComponent.getAllClaimsFromToken(JWTTokenComponent.java:60)
	at project.challengers.component.JWTTokenComponent.getClaimFromToken(JWTTokenComponent.java:41)
	at project.challengers.component.JWTTokenComponent.getMemberIdFromToken(JWTTokenComponent.java:36)
	at project.challengers.config.AuthenticationManager.authenticate(AuthenticationManager.java:36)
	at project.challengers.config.SecurityContextRepository.load(SecurityContextRepository.java:42)
	at org.springframework.security.web.server.context.ReactorContextWebFilter.withSecurityContext(ReactorContextWebFilter.java:53)
	at org.springframework.security.web.server.context.ReactorContextWebFilter.lambda$filter$0(ReactorContextWebFilter.java:48)
	at reactor.core.publisher.MonoContextWrite.subscribeOrReturn(MonoContextWrite.java:38)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:128)
	at reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:360)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:225)
	at reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onSubscribe(MonoCollectList.java:79)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)
	at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:301)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onNext(FluxFilterWhen.java:140)
	at reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:270)
	at reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:228)
	at reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)
	at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4046)
	at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:173)
	at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
	at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:860)
	at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:638)
	at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:475)
	at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:525)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:209)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
TRACE 21-08-30 23:30:20[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:30:20[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:30:20[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:30:20[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:30:20[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:30:20[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:30:20[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
DEBUG 21-08-30 23:30:34[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzNzQyMCwiaWF0IjoxNjMwMzMzODIwfQ.9DKMo266JcKe_QuOSlvidHoZqUemJW8f56c63pDtEju9VuV-z_eXxJX1pf5i7IuvYqsXlqDhbXvERlz1BA0vhA", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:30:34[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzNzQyMCwiaWF0IjoxNjMwMzMzODIwfQ.9DKMo266JcKe_QuOSlvidHoZqUemJW8f56c63pDtEju9VuV-z_eXxJX1pf5i7IuvYqsXlqDhbXvERlz1BA0vhA
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:30:34[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [INTEGER] - [1000]
ERROR 21-08-30 23:30:34[reactor-http-nio-2] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]; nested exception is javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy138.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$77de4de0.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:750)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:712)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:427)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:264)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy138.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$77de4de0.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
INFO  21-08-30 23:37:24[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1519 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 23:37:24[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 23:37:24[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 23:37:27[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 23:37:29[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 23:37:31[main] [MainApplication:61] - Started MainApplication in 7.918 seconds (JVM running for 8.479)
DEBUG 21-08-30 23:37:38[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzNzQyMCwiaWF0IjoxNjMwMzMzODIwfQ.9DKMo266JcKe_QuOSlvidHoZqUemJW8f56c63pDtEju9VuV-z_eXxJX1pf5i7IuvYqsXlqDhbXvERlz1BA0vhA", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:37:38[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzNzQyMCwiaWF0IjoxNjMwMzMzODIwfQ.9DKMo266JcKe_QuOSlvidHoZqUemJW8f56c63pDtEju9VuV-z_eXxJX1pf5i7IuvYqsXlqDhbXvERlz1BA0vhA
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [INTEGER] - [1000]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [TIMESTAMP] - [2021-08-30T23:37:38.430105]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [VARCHAR] - [user001]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [3] as [INTEGER] - [1000]
TRACE 21-08-30 23:37:38[reactor-http-nio-2] [BasicBinder:64] - binding parameter [4] as [INTEGER] - [0]
INFO  21-08-30 23:47:05[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1552 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 23:47:05[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 23:47:05[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 23:47:08[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 23:47:09[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 23:47:11[main] [MainApplication:61] - Started MainApplication in 6.572 seconds (JVM running for 7.12)
DEBUG 21-08-30 23:47:15[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzNzQyMCwiaWF0IjoxNjMwMzMzODIwfQ.9DKMo266JcKe_QuOSlvidHoZqUemJW8f56c63pDtEju9VuV-z_eXxJX1pf5i7IuvYqsXlqDhbXvERlz1BA0vhA", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:15[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzNzQyMCwiaWF0IjoxNjMwMzMzODIwfQ.9DKMo266JcKe_QuOSlvidHoZqUemJW8f56c63pDtEju9VuV-z_eXxJX1pf5i7IuvYqsXlqDhbXvERlz1BA0vhA
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([point_se1_8_] : [BIGINT]) - [8]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([id3_8_] : [VARCHAR]) - [user001]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([point2_8_] : [INTEGER]) - [1000]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:47:15[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
WARN  21-08-30 23:47:15[reactor-http-nio-2] [AbstractEventExecutor:166] - A task raised an exception. Task: reactor.netty.channel.FluxReceive$$Lambda$1844/0x0000000800c15c40@30ba85dc
java.lang.NoSuchFieldError: id
	at project.challengers.customizedRepoImpl.CustomizedPointRepositoryImpl.updatePoint(CustomizedPointRepositoryImpl.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy137.updatePoint(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:68)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$77de4de0.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
DEBUG 21-08-30 23:47:28[reactor-http-nio-3] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui.css?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"style", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:28[reactor-http-nio-4] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-bundle.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:28[reactor-http-nio-3] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:28[reactor-http-nio-4] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:28[reactor-http-nio-5] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/springfox.css?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"style", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7", If-Modified-Since:"Thu, 08 Jul 2021 12:51:31 GMT"]
DEBUG 21-08-30 23:47:28[reactor-http-nio-5] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:28[reactor-http-nio-7] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/springfox.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:28[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-standalone-preset.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"application/signed-exchange;v=b3;q=0.9,*/*;q=0.8", Purpose:"prefetch", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:28[reactor-http-nio-7] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:28[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:29[reactor-http-nio-4] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui.css?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"text/css,*/*;q=0.1", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"style", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-bundle.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"*/*", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:29[reactor-http-nio-3] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/springfox.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"*/*", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:29[reactor-http-nio-4] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:29[reactor-http-nio-3] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:29[reactor-http-nio-7] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-ui/swagger-ui-standalone-preset.js?v=3.0.0
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Accept:"*/*", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"no-cors", Sec-Fetch-Dest:"script", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:29[reactor-http-nio-7] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-resources/configuration/ui
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-resources/configuration/security
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/swagger-resources
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : GET http://localhost:8080/v2/api-docs
 [Host:"localhost:8080", Connection:"keep-alive", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", Accept:"application/json,*/*", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:29[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
DEBUG 21-08-30 23:47:35[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/member/login
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"35", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:35[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : null
TRACE 21-08-30 23:47:35[reactor-http-nio-6] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:47:35[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:47:35[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:47:35[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:47:35[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:47:35[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:47:35[reactor-http-nio-6] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
DEBUG 21-08-30 23:47:53[reactor-http-nio-6] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzODQ1NSwiaWF0IjoxNjMwMzM0ODU1fQ.jZ5xxkz8tN3ZcVPEP9LSA8_CYefD42NoenPlZ1XoLcKy_wNqKHEawy15NXqd1Rwodmh1NExZy0gh7XQqOH4Now", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:47:53[reactor-http-nio-6] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzODQ1NSwiaWF0IjoxNjMwMzM0ODU1fQ.jZ5xxkz8tN3ZcVPEP9LSA8_CYefD42NoenPlZ1XoLcKy_wNqKHEawy15NXqd1Rwodmh1NExZy0gh7XQqOH4Now
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([point_se1_8_] : [BIGINT]) - [8]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([id3_8_] : [VARCHAR]) - [user001]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([point2_8_] : [INTEGER]) - [1000]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:47:53[reactor-http-nio-6] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
WARN  21-08-30 23:47:53[reactor-http-nio-6] [AbstractEventExecutor:166] - A task raised an exception. Task: reactor.netty.channel.FluxReceive$$Lambda$1844/0x0000000800c15c40@568735fe
java.lang.NoSuchFieldError: id
	at project.challengers.customizedRepoImpl.CustomizedPointRepositoryImpl.updatePoint(CustomizedPointRepositoryImpl.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy137.updatePoint(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:68)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$77de4de0.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
INFO  21-08-30 23:48:35[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1572 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 23:48:35[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 23:48:35[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 23:48:38[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 23:48:39[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 23:48:41[main] [MainApplication:61] - Started MainApplication in 7.311 seconds (JVM running for 7.82)
DEBUG 21-08-30 23:48:46[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzODQ1NSwiaWF0IjoxNjMwMzM0ODU1fQ.jZ5xxkz8tN3ZcVPEP9LSA8_CYefD42NoenPlZ1XoLcKy_wNqKHEawy15NXqd1Rwodmh1NExZy0gh7XQqOH4Now", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:48:46[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzODQ1NSwiaWF0IjoxNjMwMzM0ODU1fQ.jZ5xxkz8tN3ZcVPEP9LSA8_CYefD42NoenPlZ1XoLcKy_wNqKHEawy15NXqd1Rwodmh1NExZy0gh7XQqOH4Now
TRACE 21-08-30 23:48:46[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:48:46[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:48:46[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:48:46[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:48:46[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:48:46[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:48:46[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([point_se1_8_] : [BIGINT]) - [8]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([id3_8_] : [VARCHAR]) - [user001]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([point2_8_] : [INTEGER]) - [1000]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [INTEGER] - [2000]
TRACE 21-08-30 23:48:47[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [VARCHAR] - [user001]
ERROR 21-08-30 23:48:47[reactor-http-nio-2] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]; nested exception is javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy138.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$1263eb4d.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:750)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:712)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:427)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:264)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy138.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$1263eb4d.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
DEBUG 21-08-30 23:49:18[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzODQ1NSwiaWF0IjoxNjMwMzM0ODU1fQ.jZ5xxkz8tN3ZcVPEP9LSA8_CYefD42NoenPlZ1XoLcKy_wNqKHEawy15NXqd1Rwodmh1NExZy0gh7XQqOH4Now", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:49:18[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzODQ1NSwiaWF0IjoxNjMwMzM0ODU1fQ.jZ5xxkz8tN3ZcVPEP9LSA8_CYefD42NoenPlZ1XoLcKy_wNqKHEawy15NXqd1Rwodmh1NExZy0gh7XQqOH4Now
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([point_se1_8_] : [BIGINT]) - [8]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([id3_8_] : [VARCHAR]) - [user001]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([point2_8_] : [INTEGER]) - [1000]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [INTEGER] - [2000]
TRACE 21-08-30 23:49:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [VARCHAR] - [user001]
ERROR 21-08-30 23:49:18[reactor-http-nio-2] [GlobalErrorHandler:63] - ChallengersException Other Exception
org.springframework.dao.DataIntegrityViolationException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]; nested exception is javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/point/deposit" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:400)
		at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
		at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
		at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
		at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
		at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
		at com.sun.proxy.$Proxy138.save(Unknown Source)
		at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
		at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
		at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$1263eb4d.addPoint(<generated>)
		at project.challengers.controller.PointController.addPoint(PointController.java:25)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
		at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
		at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
		at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
		at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
		at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
		at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: javax.persistence.EntityExistsException: A different object with the same identifier value was already associated with the session : [project.challengers.entity.Member#user001]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:123)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:750)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:712)
	at org.hibernate.engine.spi.CascadingActions$7.cascade(CascadingActions.java:298)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151)
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeBeforeSave(AbstractSaveEventListener.java:427)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:264)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:102)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy119.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:557)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy138.save(Unknown Source)
	at project.challengers.serviceImpl.PointServiceImpl.addPoint(PointServiceImpl.java:72)
	at project.challengers.serviceImpl.PointServiceImpl$$FastClassBySpringCGLIB$$5091043d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at project.challengers.serviceImpl.PointServiceImpl$$EnhancerBySpringCGLIB$$1263eb4d.addPoint(<generated>)
	at project.challengers.controller.PointController.addPoint(PointController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.reactive.result.method.InvocableHandlerMethod.lambda$invoke$0(InvocableHandlerMethod.java:146)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoZip$ZipCoordinator.signal(MonoZip.java:251)
	at reactor.core.publisher.MonoZip$ZipInner.onNext(MonoZip.java:336)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:100)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1789)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:259)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
	at reactor.netty.channel.FluxReceive.terminateReceiver(FluxReceive.java:457)
	at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:258)
	at reactor.netty.channel.FluxReceive.request(FluxReceive.java:130)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.request(FluxPeek.java:137)
	at reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:162)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onSubscribe(FluxPeek.java:170)
	at reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:92)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:168)
	at reactor.netty.channel.FluxReceive.lambda$subscribe$2(FluxReceive.java:147)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
INFO  21-08-30 23:49:26[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1584 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 23:49:26[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 23:49:26[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 23:49:29[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
DEBUG 21-08-30 23:49:30[main] [WebSecurityConfig:59] - Server White List Ip : [127.0.0.1, 0:0:0:0:0:0:0:1, 127.0.0.1]
INFO  21-08-30 23:49:31[main] [MainApplication:61] - Started MainApplication in 5.84 seconds (JVM running for 6.374)
DEBUG 21-08-30 23:51:18[reactor-http-nio-2] [SecurityContextRepository:34] - HEADS : POST http://localhost:8080/point/deposit
 [Host:"localhost:8080", Connection:"keep-alive", Content-Length:"19", sec-ch-ua:""Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"", accept:"*/*", Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzODQ1NSwiaWF0IjoxNjMwMzM0ODU1fQ.jZ5xxkz8tN3ZcVPEP9LSA8_CYefD42NoenPlZ1XoLcKy_wNqKHEawy15NXqd1Rwodmh1NExZy0gh7XQqOH4Now", sec-ch-ua-mobile:"?0", User-Agent:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36", Content-Type:"application/json", Origin:"http://localhost:8080", Sec-Fetch-Site:"same-origin", Sec-Fetch-Mode:"cors", Sec-Fetch-Dest:"empty", Accept-Encoding:"gzip, deflate, br", Accept-Language:"ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7"]
DEBUG 21-08-30 23:51:18[reactor-http-nio-2] [SecurityContextRepository:36] - AUTH HEAD : Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c2VyMDAxIiwicm9sZSI6WyJST0xFX1tdIl0sImV4cCI6MTYzMDMzODQ1NSwiaWF0IjoxNjMwMzM0ODU1fQ.jZ5xxkz8tN3ZcVPEP9LSA8_CYefD42NoenPlZ1XoLcKy_wNqKHEawy15NXqd1Rwodmh1NExZy0gh7XQqOH4Now
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([point_se1_8_] : [BIGINT]) - [8]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([id3_8_] : [VARCHAR]) - [user001]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([point2_8_] : [INTEGER]) - [1000]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_0_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_0_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_0_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_0_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_0_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:50] - extracted value ([member_i1_4_1_] : [VARCHAR]) - [null]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [INTEGER] - [2000]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [VARCHAR] - [user001]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [VARCHAR] - [user001]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([email2_3_] : [VARCHAR]) - [abc@abc.abc]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([name3_3_] : [VARCHAR]) - [홍길동]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([nickname4_3_] : [VARCHAR]) - [abc]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([phone5_3_] : [VARCHAR]) - [01011111111]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicExtractor:60] - extracted value ([pw6_3_] : [VARCHAR]) - [$2a$10$/WByngqqQiFij2YAxOczquvDsOPR52PWMNscjrtmdKP5bhH58uFFW]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [1] as [TIMESTAMP] - [2021-08-30T23:51:18.528694]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [2] as [VARCHAR] - [user001]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [3] as [INTEGER] - [1000]
TRACE 21-08-30 23:51:18[reactor-http-nio-2] [BasicBinder:64] - binding parameter [4] as [INTEGER] - [0]
INFO  21-08-30 23:59:56[main] [MainApplication:55] - Starting MainApplication using Java 11.0.10 on jeonbyeong-gug-ui-MacBookPro.local with PID 1637 (/Users/jeonbyeong-gug/Challengers/Challenge/out/production/classes started by jeonbyeong-gug in /Users/jeonbyeong-gug/Challengers/Challenge)
DEBUG 21-08-30 23:59:56[main] [MainApplication:56] - Running with Spring Boot v2.4.2, Spring v5.3.3
INFO  21-08-30 23:59:56[main] [MainApplication:664] - The following profiles are active: dev
WARN  21-08-30 23:59:59[main] [AnnotationBinder:922] - HHH000457: Joined inheritance hierarchy [project.challengers.entity.Notice] defined explicit @DiscriminatorColumn.  Legacy Hibernate behavior was to ignore the @DiscriminatorColumn.  However, as part of issue HHH-6911 we now apply the explicit @DiscriminatorColumn.  If you would prefer the legacy behavior, enable the `hibernate.discriminator.ignore_explicit_for_joined` setting (hibernate.discriminator.ignore_explicit_for_joined=true)
